FROM registry.redhat.io/rhel9/rhel-bootc:9.6

################################################################################
########## REMOVE IF YOU USE A SUBSCRIBED HOST FOR BUILDING THE IMAGE ##########
# Subscribe
################################################################################
RUN --mount=type=secret,id=username \
    --mount=type=secret,id=password \
    echo "Registering with Red Hat subscription manager..." && \
    rm -rf /etc/rhsm-host && subscription-manager register \
      --username "$(cat /run/secrets/username)" \
      --password "$(cat /run/secrets/password)" | tee /tmp/register_output && \
    grep -o 'ID: [a-f0-9-]*' /tmp/register_output | cut -d' ' -f2 > /etc/rhsm/system_id && \
    grep -o 'system name is: [a-f0-9-]*' /tmp/register_output | cut -d' ' -f4 > /etc/rhsm/host_id && \
    rm -f /tmp/register_output
################################################################################



################################################################################
#Red Hat Edge Manager
################################################################################
RUN dnf -y copr enable @redhat-et/flightctl && \
    dnf -y install flightctl-agent && \
    dnf -y clean all && \
    systemctl enable flightctl-agent.service && \
    systemctl mask bootc-fetch-apply-updates.timer

# Optional: To enable podman-compose application support, uncomment below
 RUN dnf -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm && \
     dnf -y install podman-compose && \
     dnf -y clean all && \
     rm -rf /var/{cache,log} /var/lib/{dnf,rhsm} && \
     systemctl enable podman.service

ADD config.yaml /etc/flightctl/





################################################################################
# Customization
################################################################################

RUN dnf install -y firewalld shadow-utils gnome-kiosk gdm gnome-kiosk-script-session cockpit cockpit-machines cockpit-podman cockpit-system cockpit-bridge cockpit-pcp cockpit-storaged cockpit-session-recording libvirt-daemon-config-network libvirt-daemon-kvm qemu-kvm qemu-img virt-install libguestfs-tools python3-libguestfs virt-top git firefox \
    && dnf clean all

RUN firewall-offline-cmd  --zone=public --add-port=22/tcp && \
    firewall-offline-cmd  --zone=public --add-port=9090/tcp && \
    firewall-offline-cmd  --zone=public --add-port=80/tcp

RUN mkdir -p /var/home/kiosk/.local/bin/ && \
cat > /var/home/kiosk/.local/bin/gnome-kiosk-script  <<EOF
#!/bin/sh
set -Eeuo pipefail
export MOZ_ENABLE_WAYLAND=1
while ! curl -sf --connect-timeout 5 --expect100-timeout 5 https://demo.home-assistant.io/#/energy; do
    echo "Waiting for the Kiosk APP to become available..."
    sleep 10
done
exec /usr/bin/firefox --kiosk https://demo.home-assistant.io/#/energy
EOF

RUN chmod +x /var/home/kiosk/.local/bin/gnome-kiosk-script && \
    chown -R kiosk:kiosk /var/home/kiosk

RUN systemctl set-default graphical.target &&  systemctl enable cockpit.socket

RUN cat > /etc/accountsservice/user-templates/standard <<EOF
[Template]
EnvironmentFiles=/etc/os-release;

[com.redhat.AccountsServiceUser.System]
id='${ID}'
version-id='${VERSION_ID}'

[User]
Session=gnome-kiosk-script
Icon=${HOME}/.face
EOF


RUN cat > /etc/gdm/custom.conf <<EOF
[daemon]
AutomaticLoginEnable=True
AutomaticLogin=kiosk

# Uncomment the line below to force the login screen to use Xorg
#WaylandEnable=false

[security]

[xdmcp]

[chooser]

[debug]
# Uncomment the line below to turn on debugging
#Enable=true
EOF




################################################################################
########## REMOVE IF YOU USE A SUBSCRIBED HOST FOR BUILDING THE IMAGE ##########
# Clean-up and unregistering
RUN --mount=type=secret,id=username \
    --mount=type=secret,id=password \
    echo "Unregisteringâ€¦" && \
    for uuid in $(curl -s -u "$(cat /run/secrets/username):$(cat /run/secrets/password)" \
        https://cloud.redhat.com/api/inventory/v1/hosts?fqdn=$(cat /etc/rhsm/host_id) | \
        grep -o '"id":"[^"]*' | grep -o '[^"]*$'); do \
      curl -u "$(cat /run/secrets/username):$(cat /run/secrets/password)" \
        -X DELETE https://cloud.redhat.com/api/inventory/v1/hosts/$uuid -H "accept: */*"; \
    done && subscription-manager unregister && subscription-manager clean && \
    ln -s /run/secrets/rhsm /etc/rhsm-host 
################################################################################